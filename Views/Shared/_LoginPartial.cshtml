@using Microsoft.AspNetCore.Identity
@inject SignInManager<BTUser> SignInManager
@inject UserManager<BTUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    //UserManager goes into db, gets the principle User - all of the public properties that have values I have access to 
    BTUser btUser = await UserManager.GetUserAsync(User); //this contains info for the current user

    <li class="nav-item">
        <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @btUser.FullName!</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
