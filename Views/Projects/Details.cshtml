@model BugTracker.Models.Project
@using BugTracker.Services.Interfaces
@using BugTracker.Models.Enums
@using Microsoft.AspNetCore.Identity

@inject UserManager<BTUser> UserManager
@inject IBTProjectService ProjectService
@inject IBTTicketHistoryService HistoryService

@{
    ViewData["Title"] = "Details";

    BTUser btUser = await UserManager.GetUserAsync(User);
    BTUser projectManager = await ProjectService.GetProjectManagerAsync(Model.Id);
}

<div>
    <h1>Project Details</h1>
    <hr />
</div>

<div class="row gx-5">
    <div class="col-md-6 mb-5 mt-2">
        <div class="card h-100 card-raised mb-5">
            <div class="card-header bg-primary px-4">
                <div class="d-flex justify-content-between align-items-center">
                    <div class="me-4">
                        <h5 class="text-white">@Model.Name</h5>
                    </div>
                </div>
            </div>
            <div class="card-body px-4 bg-white">
                <div class="card-text mb-3">@Model.Description</div>
                <div class="progress-container progress-info m-b-25">
                    <span class="progress-badge" style="font-size:small">Project Status</span>
                    <div class="progress mt-1 mb-0 pb-0">
                        @* Razor code block *@
                        @{
                            var start = Model.StartDate.DateTime;
                            var end = Model.EndDate.DateTime;
                            var today = DateTime.Now;
                            var percent = today >= end ? 100 : today < start ? 0 : Math.Round((today.Subtract(start)) / (end.Subtract(start)) * 100);
                        }
                        <div class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: @percent%;">
                            @* Use Progress Bar code variable here *@
                            <span class="progress-value">@percent%</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6 mb-5 mt-2">
        <div class="card h-100 card-raised bg-white text-dark">
            <div class="card-header bg-primary px-4">
                <div class="d-flex justify-content-between align-items-center">
                    <div class="me-4">
                        <h5 class="text-white">Extra Information</h5>
                    </div>
                </div>
            </div>
            <div class="card-body px-4">
                <ul class="list-group list-group-flush mb-0 pb-0">
                    <li class="list-group-item"><strong>Start Date: </strong><span class="">@Model.StartDate.ToString("dd MMM, yyyy")</span></li>
                    <li class="list-group-item"><strong>Deadline: </strong><span class="">@Model.EndDate.ToString("dd MMM, yyyy")</span></li>
                    @if (Model.ProjectPriority?.Name == nameof(BTProjectPriority.Urgent) || Model.ProjectPriority?.Name == nameof(BTProjectPriority.High))
                    {
                        <li class="list-group-item"><strong>Priority: </strong><span class="badge bg-danger rounded-pill">@Model.ProjectPriority?.Name</span></li>
                    }
                    else
                    {
                        <li class="list-group-item"><strong>Priority: </strong><span class="badge bg-success rounded-pill">@Model.ProjectPriority?.Name</span></li>

                    }
                    @* if() logic *@
                    @if (today < end && today >= start)
                    {
                        <li class="list-group-item"><strong>Status:</strong><span class=""> Active</span></li>
                    }
                    else
                    {
                        <li class="list-group-item"><strong>Status:</strong><span class=""> Inactive</span></li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>

<div class="row gx-5">
    <div class="col-12 mb-5">
        <div class="card h-100 card-raised bg-white text-dark">
            <div class="card-header bg-primary px-4">
                <div class="d-flex justify-content-between align-items-center">
                    <div class="me-4">
                        <h5 class="text-white">Project Activity</h5>
                    </div>
                </div>
            </div>
            <div class="card-body px-4" style="overflow-y:auto;height:250px;">
                @* Project Activity loop *@
                @foreach (TicketHistory history in await HistoryService.GetProjectTicketsHistoriesAsync(Model.Id, btUser.CompanyId))
                {
                    <div class="">
                        <span class="date fw-bolder">@history.Created.ToString("dd MMM, yyyy")</span>
                        <h6 class="fw-bolder">@history.Description</h6>
                        <span>By: <a href="" title="@history.User.FullName">@history.User.FullName</a></span>
                        <div class="">
                            <p>The ticket <b>@history.Property</b> was edited</p>
                            <p>@($"Previous {history.Property}: {history.OldValue}")</p>
                            <p>@($"Current {history.Property}: {history.NewValue}")</p>
                        </div>
                    </div>
                    <hr />
                }
            </div>
        </div>
    </div>
</div>

<!--Project Manager-->
<div class="row gx-5">
    <div class="col-md-6 mb-5">
        <div class="card h-100 card-raised mb-5">
            <div class="card-header bg-primary px-4">
                <div class="d-flex justify-content-between align-items-center">
                    <div class="me-4">
                        <h5 class="text-white">Project Manager</h5>
                    </div>
                </div>
            </div>
            <div class="card-body px-4 bg-white">
                @if (projectManager != null)
                {
                    <div>
                        @if (projectManager.AvatarFileData != null)
                        {
                            <img class="rounded-circle mb-2" style="width:60px;height:60px;" src="data:image/*;base64,@(Convert.ToBase64String(projectManager.AvatarFileData))" alt="" />
                        }
                        else
                        {
                            <img class="rounded-circle mb-2" style="width:60px;height:60px;" src="/img/avatardefault_92824.png" alt="" />
                        }
                        <div>
                            <h5>@projectManager.FullName</h5>
                            <span>@projectManager.Email</span>
                            <p class="card-text">[Project Manager]</p>
                            @if (User.IsInRole(nameof(Roles.Admin)) || btUser.Id == projectManager.Id)
                            {
                                <a class="btn btn-sm btn-outline-info" asp-action="AssignMembers" asp-controller="Projects" asp-route-id="@Model.Id">
                                    <div class="fst-button">
                                        Manage Team
                                    </div>
                                    <i class="material-icons icon-sm ms-1">chevron_right</i>
                                </a>
                            }
                        </div>
                    </div>
                }
                else
                {
                    <div>
                        <img class="rounded-circle" style="width:60px;height:60px;" src="/img/avatardefault_92824.png" />
                        <div class="wid-u-info">
                            <h5 class="text-muted m-b-0">Not Assigned</h5>
                            @if (User.IsInRole(nameof(Roles.Admin)))
                            {
                                <a class="btn btn-sm btn-outline-info" asp-action="AssignPM" asp-controller="Projects" asp-route-projectId="@Model.Id">
                                    <div class="fst-button">
                                        Assign Project Manager
                                    </div>
                                    <i class="material-icons icon-sm ms-1">chevron_right</i>
                                </a>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <!--Team Members-->
    <div class="col-md-6 mb-5">
        <div class="card h-100 card-raised bg-white text-dark">
            <div class="card-header bg-primary px-4">
                <div class="d-flex justify-content-between align-items-center">
                    <div class="me-4">
                        <h5 class="text-white">Project Team</h5>
                    </div>
                </div>
            </div>
            <div class="card-body px-4">
                <ul class="list-group mb-0">
                    @* Logic for avatars *@
                    @foreach (BTUser member in await ProjectService.GetAllProjectMembersExceptPMAsync(Model.Id))
                    {
                        <li class="list-group-item">
                            <a href="">
                                <div class="mb-2">
                                    @if (member.AvatarFileData != null)
                                    {
                                        <img class="rounded-circle" style="width:40px;height:auto;" src="data:img/*;base,@(Convert.ToBase64String(member.AvatarFileData))" alt="" />
                                    }
                                    else
                                    {
                                        <img class="rounded-circle" style="width:40px;height:auto;" src="/img/avatardefault_92824.png" alt="" />
                                    }
                                </div>
                            </a>
                            <div>
                                <span class="">@member.FullName</span>
                            </div>
                            <div>
                                <span class="card-text">[@((await UserManager.GetRolesAsync(member)).FirstOrDefault())]</span>
                            </div>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>

<!-- Table -->
<div class="card card-raised mb-5">
    <div class="card-header bg-primary text-white px-4">
        <div class="d-flex justify-content-between align-items-center">
            <div class="me-4">
                <h2 class="card-title text-white mb-0">Tickets</h2>
                <div class="card-subtitle">Assign Developers</div>
            </div>
        </div>
    </div>
    <div class="card-body p-4">
        <!-- Projects -->
        <table id="datatablesSimple">
            <thead>
                <tr>
                    @* Table header *@
                    <th>Title</th>
                    <th>Developer</th>
                    <th>Status</th>
                    <th>Priority</th>
                    <th>Date</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @* Table body *@
                @foreach (Ticket ticket in Model.Tickets.OrderByDescending(d => d.Created))
                {
                    <tr>
                        <td><a asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id" style="color:black"><strong>@ticket.Title</strong></a> </td>
                        <td>
                            @if (ticket.DeveloperUserId != null)
                            {
                                @ticket.DeveloperUser?.FullName
                            }
                            else
                            {
                                if (User.IsInRole(nameof(Roles.Admin)) || User.IsInRole(nameof(Roles.ProjectManager)))
                                {
                                    <a class="badge bg-warning rounded-pill text-dark" style="text-decoration: none" asp-action="AssignDeveloper" asp-controller="Tickets" asp-route-Id="@ticket.Id">Assign Dev</a>
                                }

                            }
                        </td>
                        <td>@ticket.TicketStatus.Name </td>
                        @if (ticket.TicketPriority.Name == nameof(BTTicketPriority.High) || ticket.TicketPriority.Name == nameof(BTTicketPriority.Urgent))
                        {

                            <td><span class="badge bg-danger rounded-pill">@ticket.TicketPriority.Name </span></td>
                        }
                        else
                        {
                            <td><span class="badge bg-success rounded-pill">@ticket.TicketPriority.Name </span></td>

                        }
                        <td>@ticket.Created.ToString("dd-MM-yyyy")</td>
                        <td>
                            <a class="btn btn-sm btn-outline-info me-1" asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id">
                                <div class="fst-button">
                                    Details
                                </div>
                                <i class="material-icons icon-sm ms-1">chevron_right</i>
                            </a>
                            @if (ticket.DeveloperUserId == btUser.Id || ticket.OwnerUserId == btUser.Id || (projectManager?.Id == btUser.Id) || User.IsInRole(nameof(Roles.Admin)))
                            {
                                <a class="btn btn-sm btn-outline-info me-1" asp-action="Edit" asp-controller="Tickets" asp-route-id="@ticket.Id">
                                    <div class="fst-button">
                                        Edit
                                    </div>
                                    <i class="material-icons icon-sm ms-1">chevron_right</i>
                                </a>
                            }

                            @if (User.IsInRole("Admin") || await ProjectService.IsAssignedProjectManagerAsync(btUser.Id, ticket.ProjectId))
                            {
                                if (ticket.Archived)
                                {
                                    <a class="btn btn-sm btn-outline-info me-1" asp-action="Restore" asp-controller="Tickets" asp-route-id="@ticket.Id">
                                        <div class="fst-button">
                                            Restore
                                        </div>
                                        <i class="material-icons icon-sm ms-1">chevron_right</i>
                                    </a>
                                }
                                else
                                {
                                    <a class="btn btn-sm btn-outline-info me-1" asp-action="Archive" asp-controller="Tickets" asp-route-id="@ticket.Id">
                                        <div class="fst-button">
                                            Archive
                                        </div>
                                        <i class="material-icons icon-sm ms-1">chevron_right</i>
                                    </a>
                                }

                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="card-footer bg-transparent position-relative ripple-gray">
            <a class="d-flex align-items-center justify-content-start text-decoration-none stretched-link text-info" asp-action="Create" asp-controller="Tickets">
                <div class="fst-button">Create Ticket</div>
                <i class="material-icons icon-sm ms-1">chevron_right</i>
            </a>
        </div>
    </div>
</div>

@section scripts{
    <!-- Load Simple DataTables Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/simple-datatables@latest" crossorigin="anonymous"></script>
    <script src="~/js/datatables/datatables-simple-demo.js"></script>
}